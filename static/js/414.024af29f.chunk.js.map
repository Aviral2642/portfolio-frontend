{"version":3,"file":"static/js/414.024af29f.chunk.js","mappings":"wOAIA,MAAMA,GAAoBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAOC,IAAdF,CAAkBG,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iSAWtCC,EAAiBL,EAAAA,GAAOE,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mJAQ3BG,EAAiBP,EAAAA,GAAOE,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qFAIjBK,GAASA,EAAMC,OAAS,WAGlCC,EAAgBX,EAAAA,GAAOE,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sEAM1BS,EAAeb,EAAAA,GAAOE,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,qHAQzBW,GAAef,EAAAA,EAAAA,IAAOC,EAAAA,EAAOC,IAAdF,CAAkBgB,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,iIASjCa,EAASjB,EAAAA,GAAOkB,KAAIC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,sEAMpBgB,EAAUpB,EAAAA,GAAOkB,KAAIG,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,kDAKrBkB,EAAStB,EAAAA,GAAOkB,KAAIK,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,uDAapBoB,GARQxB,EAAAA,GAAOkB,KAAIO,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,6BAITJ,EAAAA,GAAOkB,KAAIQ,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,8BAIZJ,EAAAA,EAAAA,IAAOC,EAAAA,EAAOiB,KAAdlB,CAAmB2B,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,kHA+IlC,EAvI0BwB,KACxB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,KAC9CG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,GACnCK,GAAcC,EAAAA,EAAAA,QAAO,OACpBC,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,GAE3CS,EAAW,CACf,CACEC,QAAS,SACTC,OAAQ,qGAEV,CACED,QAAS,kBACTC,OAAQ,oZAEV,CACED,QAAS,oCACTC,OAAQ,gQAEV,CACED,QAAS,uBACTC,OAAQ,6PAEV,CACED,QAAS,qEACTC,OAAQ,gJAEV,CACED,QAAS,oCACTC,OAAQ,sXAIZC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAWC,IACff,EAASgB,GAAQ,IAAIA,EAAMD,KAGvBE,EAAcC,MAAOP,EAASC,KAClCP,GAAY,GAGZS,EAAQ,CACNK,KAAM,UACNC,QAAST,EACTU,GAAIC,KAAKC,cAIL,IAAIC,QAAQC,GAAWC,WAAWD,EAAS,MAGjDX,EAAQ,CACNK,KAAM,SACNC,QAASR,EACTS,GAAIC,KAAKC,MAAQ,UAIb,IAAIC,QAAQC,GAAWC,WAAWD,EAAS,MACjDpB,GAAY,IAGRsB,EAAUT,UACd,IAAK,IAAIU,EAAI,EAAGA,EAAIlB,EAASmB,OAAQD,UAC7BX,EAAYP,EAASkB,GAAGjB,QAASD,EAASkB,GAAGhB,QAIrDc,WAAW,KACT1B,EAAS,IACTS,EAAgB,GAChBkB,KACC,MAGCG,EAAQJ,WAAWC,EAAS,KAClC,MAAO,IAAMI,aAAaD,IACzB,KAEHjB,EAAAA,EAAAA,WAAU,KACJP,EAAY0B,UACd1B,EAAY0B,QAAQC,UAAY3B,EAAY0B,QAAQE,eAErD,CAACnC,IAuBJ,OACEoC,EAAAA,EAAAA,MAAClE,EAAiB,CAChBmE,QAAS,CAAEC,QAAS,EAAGC,MAAO,IAC9BC,QAAS,CAAEF,QAAS,EAAGC,MAAO,GAC9BE,WAAY,CAAEC,SAAU,IAAMC,SAAA,EAE9BP,EAAAA,EAAAA,MAAC5D,EAAc,CAAAmE,SAAA,EACbC,EAAAA,EAAAA,KAAClE,EAAc,CAACG,MAAM,aACtB+D,EAAAA,EAAAA,KAAClE,EAAc,CAACG,MAAM,aACtB+D,EAAAA,EAAAA,KAAClE,EAAc,CAACG,MAAM,aACtB+D,EAAAA,EAAAA,KAAC9D,EAAa,CAAA6D,SAAC,8BAEjBP,EAAAA,EAAAA,MAACpD,EAAY,CAAC6D,IAAKtC,EAAYoC,SAAA,EAC7BC,EAAAA,EAAAA,KAACE,EAAAA,EAAe,CAAAH,SACb3C,EAAM+C,IAnCK/B,IAClB,OAAQA,EAAKI,MACX,IAAK,UACH,OACEgB,EAAAA,EAAAA,MAAClD,EAAY,CAAemD,QAAS,CAAEC,QAAS,EAAGU,GAAI,IAAMR,QAAS,CAAEF,QAAS,EAAGU,EAAG,GAAIL,SAAA,EACzFC,EAAAA,EAAAA,KAACxD,EAAM,CAAAuD,SAAC,qBACRC,EAAAA,EAAAA,KAACrD,EAAO,CAAAoD,SAAE3B,EAAKK,UACdhB,IAAYuC,EAAAA,EAAAA,KAACjD,EAAM,CAAC6C,QAAS,CAAEF,QAAS,CAAC,EAAG,EAAG,IAAMG,WAAY,CAAEC,SAAU,EAAGO,OAAQC,SAHxElC,EAAKM,IAM5B,IAAK,SACH,OACEsB,EAAAA,EAAAA,KAAC1D,EAAY,CAAemD,QAAS,CAAEC,QAAS,EAAGa,EAAG,IAAMX,QAAS,CAAEF,QAAS,EAAGa,EAAG,GAAIR,UACxFC,EAAAA,EAAAA,KAACnD,EAAM,CAAAkD,SAAE3B,EAAKK,WADGL,EAAKM,IAI5B,QACE,OAAO,UAoBNjB,IACC+B,EAAAA,EAAAA,MAAClD,EAAY,CAAAyD,SAAA,EACXC,EAAAA,EAAAA,KAACxD,EAAM,CAAAuD,SAAC,qBACRC,EAAAA,EAAAA,KAACjD,EAAM,CAAC6C,QAAS,CAAEF,QAAS,CAAC,EAAG,EAAG,IAAMG,WAAY,CAAEC,SAAU,EAAGO,OAAQC,gB,yDCjNxF,SAASE,IACL,MAAMC,GAAY7C,EAAAA,EAAAA,SAAO,GAOzB,OANA8C,EAAAA,EAAAA,GAA0B,KACtBD,EAAUpB,SAAU,EACb,KACHoB,EAAUpB,SAAU,IAEzB,IACIoB,CACX,C,sCCLA,MAAME,UAAwBC,EAAAA,UAC1BC,uBAAAA,CAAwBC,GACpB,MAAMC,EAAUC,KAAKhF,MAAMiF,SAAS5B,QACpC,GAAI0B,GAAWD,EAAUI,YAAcF,KAAKhF,MAAMkF,UAAW,CACzD,MAAMC,EAAOH,KAAKhF,MAAMoF,QAAQ/B,QAChC8B,EAAKE,OAASN,EAAQO,cAAgB,EACtCH,EAAKI,MAAQR,EAAQS,aAAe,EACpCL,EAAKM,IAAMV,EAAQW,UACnBP,EAAKQ,KAAOZ,EAAQa,UACxB,CACA,OAAO,IACX,CAIAC,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOd,KAAKhF,MAAM+D,QACtB,EAEJ,SAASgC,EAAQC,GAA0B,IAAzB,SAAEjC,EAAQ,UAAEmB,GAAWc,EACrC,MAAMtD,GAAKuD,EAAAA,EAAAA,SACLhC,GAAMrC,EAAAA,EAAAA,QAAO,MACbuD,GAAOvD,EAAAA,EAAAA,QAAO,CAChB2D,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,IAiCV,OAtBAO,EAAAA,EAAAA,oBAAmB,KACf,MAAM,MAAEX,EAAK,OAAEF,EAAM,IAAEI,EAAG,KAAEE,GAASR,EAAK9B,QAC1C,GAAI6B,IAAcjB,EAAIZ,UAAYkC,IAAUF,EACxC,OACJpB,EAAIZ,QAAQ8C,QAAQC,YAAc1D,EAClC,MAAM2D,EAAQC,SAASC,cAAc,SAarC,OAZAD,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAADC,OACDlE,EAAE,yEAAAkE,OAEdrB,EAAK,wCAAAqB,OACJvB,EAAM,qCAAAuB,OACTnB,EAAG,sCAAAmB,OACFjB,EAAI,0CAIT,KACHW,SAASE,KAAKK,YAAYR,KAE/B,CAACnB,IACIN,EAAAA,cAAoBD,EAAiB,CAAEO,UAAWA,EAAWD,SAAUhB,EAAKmB,QAASD,GAAQP,EAAAA,aAAmBb,EAAU,CAAEE,QACxI,CC9DA,MAAM6C,EAAgBd,IAA4F,IAA3F,SAAEjC,EAAQ,QAAEN,EAAO,UAAEyB,EAAS,eAAE6B,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,GAAOlB,EACzG,MAAMmB,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/B3E,GAAKuD,EAAAA,EAAAA,SACLqB,GAAUC,EAAAA,EAAAA,SAAQ,KAAM,CAC1B7E,KACAe,UACAyB,YACA8B,SACAD,eAAiBS,IACbL,EAAiBM,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcP,EAAiBQ,SACtC,IAAKD,EACD,OAERX,GAAkBA,KAEtBa,SAAWJ,IACPL,EAAiBM,IAAID,GAAS,GACvB,IAAML,EAAiBU,OAAOL,MAQ7CP,OAAwBa,EAAY,CAAC5C,IAiBrC,OAhBAqC,EAAAA,EAAAA,SAAQ,KACJJ,EAAiBY,QAAQ,CAACC,EAAGC,IAAQd,EAAiBM,IAAIQ,GAAK,KAChE,CAAC/C,IAKJN,EAAAA,UAAgB,MACXM,IACIiC,EAAiBhC,MAClB4B,GACAA,KACL,CAAC7B,IACS,cAATgC,IACAnD,EAAWa,EAAAA,cAAoBmB,EAAU,CAAEb,UAAWA,GAAanB,IAE/Da,EAAAA,cAAoBsD,EAAAA,EAAgBC,SAAU,CAAEC,MAAOd,GAAWvD,IAE9E,SAASsD,IACL,OAAO,IAAIgB,GACf,C,4BC3CA,MAAMC,EAAeC,GAAUA,EAAMN,KAAO,GAiD5C,MAAM/D,EAAkB8B,IAAyH,IAAxH,SAAEjC,EAAQ,OAAEiD,EAAM,QAAEvD,GAAU,EAAI,eAAEsD,EAAc,gBAAEyB,EAAe,sBAAEvB,GAAwB,EAAI,KAAEC,EAAO,QAASlB,GACxIyC,EAAAA,EAAAA,IAAWD,EAAiB,4CAG5B,MAAME,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAoBF,aC3DvD,WACI,MAAMjE,EAAYD,KACXqE,EAAmBC,IAAwBxH,EAAAA,EAAAA,UAAS,GACrDoH,GAAcK,EAAAA,EAAAA,aAAY,KAC5BtE,EAAUpB,SAAWyF,EAAqBD,EAAoB,IAC/D,CAACA,IAMJ,MAAO,EADqBE,EAAAA,EAAAA,aAAY,IAAMC,EAAAA,GAAMC,WAAWP,GAAc,CAACA,IACjDG,EACjC,CD+CsEK,GAAiB,GAC7EzE,EAAYD,IAEZ2E,EAjDV,SAAsBpF,GAClB,MAAMqF,EAAW,GAMjB,OAJAC,EAAAA,SAAStB,QAAQhE,EAAWwE,KACpBe,EAAAA,EAAAA,gBAAef,IACfa,EAASG,KAAKhB,KAEfa,CACX,CAyC6BI,CAAazF,GACtC,IAAI0F,EAAmBN,EACvB,MAAMO,GAAkB9H,EAAAA,EAAAA,QAAO,IAAIyG,KAAOhF,QAGpCsG,GAAkB/H,EAAAA,EAAAA,QAAO6H,GAEzBG,GAAchI,EAAAA,EAAAA,QAAO,IAAIyG,KAAOhF,QAGhCwG,GAAkBjI,EAAAA,EAAAA,SAAO,GE1EnC,IAA0BkI,EFqFtB,IAVApF,EAAAA,EAAAA,GAA0B,KACtBmF,EAAgBxG,SAAU,EAnElC,SAA2BU,EAAU6F,GACjC7F,EAASgE,QAASQ,IACd,MAAMN,EAAMK,EAAYC,GACxBqB,EAAYnC,IAAIQ,EAAKM,IAE7B,CA+DQwB,CAAkBZ,EAAkBS,GACpCD,EAAgBtG,QAAUoG,IE9ERK,EFgFL,KACbD,EAAgBxG,SAAU,EAC1BuG,EAAYI,QACZN,EAAgBM,UElFb9H,EAAAA,EAAAA,WAAU,IAAM,IAAM4H,IAAY,IFoFrCD,EAAgBxG,QAChB,OAAQuB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM6E,EAAiBtF,IAAKoE,GAAW3D,EAAAA,cAAoBkC,EAAe,CAAEmB,IAAKK,EAAYC,GAAQrD,WAAW,EAAMzB,UAASA,QAAUqE,EAAmBb,sBAAuBA,EAAuBC,KAAMA,GAAQqB,KAGxQkB,EAAmB,IAAIA,GAGvB,MAAMQ,EAAcN,EAAgBtG,QAAQc,IAAImE,GAC1C4B,EAAaf,EAAiBhF,IAAImE,GAElC6B,EAAaF,EAAY/G,OAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIkH,EAAYlH,IAAK,CACjC,MAAMgF,EAAMgC,EAAYhH,IACS,IAA7BiH,EAAWE,QAAQnC,IAAgByB,EAAgBW,IAAIpC,IACvDyB,EAAgBjC,IAAIQ,OAAKH,EAEjC,CA4DA,MAzDa,SAATZ,GAAmBwC,EAAgBvE,OACnCsE,EAAmB,IAIvBC,EAAgB3B,QAAQ,CAACuC,EAAWrC,KAEhC,IAAiC,IAA7BiC,EAAWE,QAAQnC,GACnB,OACJ,MAAMM,EAAQqB,EAAYW,IAAItC,GAC9B,IAAKM,EACD,OACJ,MAAMiC,EAAiBP,EAAYG,QAAQnC,GAC3C,IAAIwC,EAAmBH,EACvB,IAAKG,EAAkB,CACnB,MAAMC,EAASA,KAEXhB,EAAgB7B,OAAOI,GAIvB,MAAM0C,EAAeC,MAAMC,KAAKjB,EAAYkB,QAAQC,OAAQC,IAAcd,EAAWe,SAASD,IAa9F,GAXAL,EAAa5C,QAASmD,GAAgBtB,EAAY/B,OAAOqD,IAEzDvB,EAAgBtG,QAAU8F,EAAiB4B,OAAQI,IAC/C,MAAMC,EAAkB9C,EAAY6C,GACpC,OAEAC,IAAoBnD,GAEhB0C,EAAaM,SAASG,MAGzB1B,EAAgBvE,KAAM,CACvB,IAA0B,IAAtBV,EAAUpB,QACV,OACJqF,IACA3B,GAAkBA,GACtB,GAEJ0D,EAAoB7F,EAAAA,cAAoBkC,EAAe,CAAEmB,IAAKK,EAAYC,GAAQrD,WAAW,EAAO6B,eAAgB2D,EAAQ1D,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,GAAQqB,GACxMmB,EAAgBjC,IAAIQ,EAAKwC,EAC7B,CACAhB,EAAiB4B,OAAOb,EAAgB,EAAGC,KAI/ChB,EAAmBA,EAAiBtF,IAAKoE,IACrC,MAAMN,EAAMM,EAAMN,IAClB,OAAOyB,EAAgBW,IAAIpC,GAAQM,EAAU3D,EAAAA,cAAoBkC,EAAe,CAAEmB,IAAKK,EAAYC,GAAQrD,WAAW,EAAM+B,sBAAuBA,EAAuBC,KAAMA,GAAQqB,KAOpL3D,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM8E,EAAgBvE,KAC5DsE,EACAA,EAAiBtF,IAAKoE,IAAU+C,EAAAA,EAAAA,cAAa/C,K","sources":["components/TerminalInterface.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst TerminalContainer = styled(motion.div)`\n  background: rgba(0, 0, 0, 0.95);\n  border-radius: 15px;\n  border: 1px solid rgba(102, 126, 234, 0.3);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);\n  overflow: hidden;\n  font-family: 'Fira Code', 'Monaco', 'Consolas', monospace;\n  max-width: 800px;\n  margin: 40px auto;\n`;\n\nconst TerminalHeader = styled.div`\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst TerminalButton = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color || '#ff5f57'};\n`;\n\nconst TerminalTitle = styled.div`\n  color: white;\n  font-weight: 600;\n  margin-left: 10px;\n`;\n\nconst TerminalBody = styled.div`\n  padding: 20px;\n  min-height: 300px;\n  max-height: 400px;\n  overflow-y: auto;\n  background: #0a0a0a;\n`;\n\nconst TerminalLine = styled(motion.div)`\n  margin: 5px 0;\n  font-size: 14px;\n  line-height: 1.4;\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n`;\n\nconst Prompt = styled.span`\n  color: #667eea;\n  font-weight: bold;\n  flex-shrink: 0;\n`;\n\nconst Command = styled.span`\n  color: #f093fb;\n  font-weight: 500;\n`;\n\nconst Output = styled.span`\n  color: #e0e0e0;\n  white-space: pre-wrap;\n`;\n\nconst Error = styled.span`\n  color: #ff6b6b;\n`;\n\nconst Success = styled.span`\n  color: #51cf66;\n`;\n\nconst Cursor = styled(motion.span)`\n  display: inline-block;\n  width: 8px;\n  height: 16px;\n  background: #667eea;\n  margin-left: 2px;\n`;\n\nconst TerminalInterface = () => {\n  const [lines, setLines] = useState([]);\n  const [currentCommand, setCurrentCommand] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const terminalRef = useRef(null);\n  const [commandIndex, setCommandIndex] = useState(0);\n\n  const commands = [\n    {\n      command: 'whoami',\n      output: 'aviral-srivastava\\nSecurity Engineer @ Amazon\\nRSA Security Scholar 2025\\nOffensive AI Researcher'\n    },\n    {\n      command: 'ls -la /skills/',\n      output: 'drwxr-xr-x 8 root root 4096 Jan 2025 .\\ndrwxr-xr-x 3 root root 4096 Jan 2025 ..\\n-rw-r--r-- 1 root root 2048 Jan 2025 offensive-security\\n-rw-r--r-- 1 root root 1536 Jan 2025 ai-cybersecurity\\n-rw-r--r-- 1 root root 1024 Jan 2025 red-teaming\\n-rw-r--r-- 1 root root 1280 Jan 2025 cryptography\\n-rw-r--r-- 1 root root 1024 Jan 2025 cloud-security\\n-rw-r--r-- 1 root root 1536 Jan 2025 malware-analysis'\n    },\n    {\n      command: 'cat /achievements/rsa-scholar.txt',\n      output: 'RSA Security Scholar 2025\\n========================\\n\\nSelected from 10,000+ applicants\\nFocus: AI x Cybersecurity intersection\\nResearch: LLM Unlearning & Adversarial ML\\nConference: RSA 2025, San Francisco\\n\\nImpact: Shaping the future of AI security'\n    },\n    {\n      command: 'git log --oneline -5',\n      output: 'a1b2c3d ZeroDayForge v2.1 - Enhanced LLM exploit generation\\nf4e5d6c KernelGhost - eBPF rootkit framework\\ng7h8i9j AI-RedTeam - Automated payload crafting\\nk1l2m3n D-POM - Dynamic path obfuscation\\np5q6r7s CTF-Engine - Interactive challenge platform'\n    },\n    {\n      command: 'curl -s https://api.github.com/users/Aviral2642 | jq .public_repos',\n      output: '47\\n\\nActive repositories:\\n- ZeroDayForge (2.1k stars)\\n- AI-RedTeam (1.8k stars)\\n- KernelGhost (1.2k stars)\\n- CTF-Challenges (890 stars)'\n    },\n    {\n      command: 'nmap -sS --script vuln target.com',\n      output: 'Starting Nmap 7.94\\nHost is up (0.045s latency).\\n\\nPORT     STATE SERVICE    VERSION\\n22/tcp   open  ssh        OpenSSH 8.2\\n80/tcp   open  http       Apache 2.4.41\\n443/tcp  open  ssl/http   Apache 2.4.41\\n\\nVULNERABILITIES:\\n- CVE-2021-44228 (Log4j) - CRITICAL\\n- CVE-2020-1472 (Zerologon) - HIGH\\n- CVE-2019-0708 (BlueKeep) - HIGH\\n\\nTotal: 3 vulnerabilities found'\n    }\n  ];\n\n  useEffect(() => {\n    const addLine = (line) => {\n      setLines(prev => [...prev, line]);\n    };\n\n    const typeCommand = async (command, output) => {\n      setIsTyping(true);\n      \n      // Add command line\n      addLine({\n        type: 'command',\n        content: command,\n        id: Date.now()\n      });\n\n      // Wait a bit\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Add output\n      addLine({\n        type: 'output',\n        content: output,\n        id: Date.now() + 1\n      });\n\n      // Wait before next command\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      setIsTyping(false);\n    };\n\n    const runDemo = async () => {\n      for (let i = 0; i < commands.length; i++) {\n        await typeCommand(commands[i].command, commands[i].output);\n      }\n      \n      // Restart after a pause\n      setTimeout(() => {\n        setLines([]);\n        setCommandIndex(0);\n        runDemo();\n      }, 5000);\n    };\n\n    const timer = setTimeout(runDemo, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  }, [lines]);\n\n  const renderLine = (line) => {\n    switch (line.type) {\n      case 'command':\n        return (\n          <TerminalLine key={line.id} initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }}>\n            <Prompt>aviral@cyber:~$</Prompt>\n            <Command>{line.content}</Command>\n            {isTyping && <Cursor animate={{ opacity: [1, 0, 1] }} transition={{ duration: 1, repeat: Infinity }} />}\n          </TerminalLine>\n        );\n      case 'output':\n        return (\n          <TerminalLine key={line.id} initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }}>\n            <Output>{line.content}</Output>\n          </TerminalLine>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <TerminalContainer\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      <TerminalHeader>\n        <TerminalButton color=\"#ff5f57\" />\n        <TerminalButton color=\"#ffbd2e\" />\n        <TerminalButton color=\"#28ca42\" />\n        <TerminalTitle>aviral@cyber-terminal</TerminalTitle>\n      </TerminalHeader>\n      <TerminalBody ref={terminalRef}>\n        <AnimatePresence>\n          {lines.map(renderLine)}\n        </AnimatePresence>\n        {isTyping && (\n          <TerminalLine>\n            <Prompt>aviral@cyber:~$</Prompt>\n            <Cursor animate={{ opacity: [1, 0, 1] }} transition={{ duration: 1, repeat: Infinity }} />\n          </TerminalLine>\n        )}\n      </TerminalBody>\n    </TerminalContainer>\n  );\n};\n\nexport default TerminalInterface;\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["TerminalContainer","styled","motion","div","_templateObject","_taggedTemplateLiteral","TerminalHeader","_templateObject2","TerminalButton","_templateObject3","props","color","TerminalTitle","_templateObject4","TerminalBody","_templateObject5","TerminalLine","_templateObject6","Prompt","span","_templateObject7","Command","_templateObject8","Output","_templateObject9","Cursor","_templateObject0","_templateObject1","_templateObject10","TerminalInterface","lines","setLines","useState","currentCommand","setCurrentCommand","isTyping","setIsTyping","terminalRef","useRef","commandIndex","setCommandIndex","commands","command","output","useEffect","addLine","line","prev","typeCommand","async","type","content","id","Date","now","Promise","resolve","setTimeout","runDemo","i","length","timer","clearTimeout","current","scrollTop","scrollHeight","_jsxs","initial","opacity","scale","animate","transition","duration","children","_jsx","ref","AnimatePresence","map","x","repeat","Infinity","y","useIsMounted","isMounted","useIsomorphicLayoutEffect","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","_ref","useId","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","presentKeys","targetKeys","numPresent","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement"],"sourceRoot":""}