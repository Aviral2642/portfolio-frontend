{"version":3,"file":"static/js/283.09d77536.chunk.js","mappings":"oNAIA,MAAMA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAOC,IAAdF,CAAkBG,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2TAcjCC,EAAaL,EAAAA,GAAOM,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oJASvBI,GAAOR,EAAAA,EAAAA,IAAOC,EAAAA,EAAOK,IAAdN,CAAkBS,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uSAYzBM,EAAaV,EAAAA,GAAOW,KAAIC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sIASxBS,GAAUb,EAAAA,EAAAA,IAAOC,EAAAA,EAAOK,IAAdN,CAAkBc,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,0dAwB5BW,GAAUf,EAAAA,EAAAA,IAAOC,EAAAA,EAAOe,EAAdhB,CAAgBiB,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,wiBA6B1Bc,GAAmBlB,EAAAA,EAAAA,IAAOC,EAAAA,EAAOkB,OAAdnB,CAAqBoB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,0NA0G9C,EA3FmBiB,KACjB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,IACzCG,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAeA,KACnBF,EAAYG,OAAOC,QAAU,KAI/B,OADAD,OAAOE,iBAAiB,SAAUH,GAC3B,IAAMC,OAAOG,oBAAoB,SAAUJ,IACjD,IAEH,MAYMK,EAAgB,CACpBC,MAAO,KACPC,WAAY,CAAEC,SAAU,KAGpBC,EAAc,CAClBH,MAAO,IACPC,WAAY,CAAEC,SAAU,KAY1B,OACEE,EAAAA,EAAAA,KAACvC,EAAY,CACXwC,SAjCgB,CAClBC,OAAQ,CAAEC,QAAS,EAAGC,GAAI,IAC1BC,QAAS,CACPF,QAAS,EACTC,EAAG,EACHP,WAAY,CACVC,SAAU,GACVQ,gBAAiB,MA2BnBC,QAAQ,SACRC,QAAQ,UACRC,MAAO,CACLC,WAAYvB,EACR,yBACA,0BACJwB,UAEFC,EAAAA,EAAAA,MAAC7C,EAAU,CAAA4C,SAAA,EACTC,EAAAA,EAAAA,MAAC1C,EAAI,CACH2C,WAAYlB,EACZmB,SAAUf,EACVgB,QAASA,IAAMxB,OAAOyB,SAAS,CAAEC,IAAK,EAAGC,SAAU,WAAYP,SAAA,CAChE,UACOX,EAAAA,EAAAA,KAAC5B,EAAU,CAAAuC,SAAC,UAGpBX,EAAAA,EAAAA,KAACzB,EAAO,CAAC4C,UAAWnC,EAAa,SAAW,GAAG2B,SA7BpC,CACf,CAAES,KAAM,QAASC,MAAO,QACxB,CAAED,KAAM,aAAcC,MAAO,aAC7B,CAAED,KAAM,YAAaC,MAAO,YAC5B,CAAED,KAAM,YAAaC,MAAO,YAC5B,CAAED,KAAM,cAAeC,MAAO,cAC9B,CAAED,KAAM,WAAYC,MAAO,YAwBXC,IAAI,CAACC,EAAMC,KACnBxB,EAAAA,EAAAA,KAACvB,EAAO,CAEN2C,KAAMG,EAAKH,KACXP,WAAYlB,EACZmB,SAAUf,EACVgB,QAASA,IAAM9B,GAAc,GAAO0B,SAEnCY,EAAKF,OANDE,EAAKH,UAWhBpB,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEgB,QAAS,OAAQC,WAAY,UAAWf,UACpDX,EAAAA,EAAAA,KAACpB,EAAgB,CACfiC,WAAYlB,EACZmB,SAAUf,EACVgB,QAASA,IAAM9B,GAAeD,GAAY2B,SAEzC3B,EAAa,SAAM,kB","sources":["components/Navigation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport styled from 'styled-components';\n\nconst NavContainer = styled(motion.nav)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: var(--z-fixed);\n  background: rgba(10, 10, 15, 0.95);\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  border-bottom: 1px solid var(--border-color);\n  padding: 20px 0;\n  transition: var(--transition-normal);\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.div)`\n  font-family: var(--font-display);\n  font-size: 24px;\n  font-weight: 900;\n  background: var(--gradient-primary);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  text-shadow: 0 0 10px var(--blue-primary);\n  cursor: pointer;\n`;\n\nconst LogoCursor = styled.span`\n  animation: blink 1s infinite;\n  \n  @keyframes blink {\n    0%, 50% { opacity: 1; }\n    51%, 100% { opacity: 0; }\n  }\n`;\n\nconst NavMenu = styled(motion.div)`\n  display: flex;\n  gap: 40px;\n  align-items: center;\n  \n  @media (max-width: 768px) {\n    position: fixed;\n    top: 100%;\n    left: 0;\n    right: 0;\n    background: var(--bg-primary);\n    border-top: 1px solid var(--border-color);\n    flex-direction: column;\n    padding: 20px;\n    transform: translateY(-100%);\n    transition: transform 0.3s ease;\n    z-index: var(--z-dropdown);\n    \n    &.active {\n      transform: translateY(0);\n    }\n  }\n`;\n\nconst NavLink = styled(motion.a)`\n  color: var(--text-secondary);\n  text-decoration: none;\n  font-weight: 500;\n  font-family: var(--font-primary);\n  transition: var(--transition-fast);\n  position: relative;\n  \n  &:hover {\n    color: var(--text-accent);\n    text-shadow: 0 0 5px var(--blue-primary);\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 0;\n    width: 0;\n    height: 2px;\n    background: var(--gradient-primary);\n    transition: var(--transition-fast);\n  }\n  \n  &:hover::after {\n    width: 100%;\n  }\n`;\n\nconst MobileMenuButton = styled(motion.button)`\n  display: none;\n  background: none;\n  border: none;\n  color: var(--text-primary);\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: 10px;\n  \n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n\n\nconst Navigation = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const navVariants = {\n    hidden: { opacity: 0, y: -50 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.8,\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const hoverVariants = {\n    scale: 1.05,\n    transition: { duration: 0.3 }\n  };\n\n  const tapVariants = {\n    scale: 0.95,\n    transition: { duration: 0.1 }\n  };\n\n  const navLinks = [\n    { href: '#home', label: 'Home' },\n    { href: '#expertise', label: 'Expertise' },\n    { href: '#research', label: 'Research' },\n    { href: '#projects', label: 'Projects' },\n    { href: '#experience', label: 'Experience' },\n    { href: '#contact', label: 'Contact' }\n  ];\n\n  return (\n    <NavContainer\n      variants={navVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n      style={{\n        background: scrolled \n          ? 'rgba(10, 10, 15, 0.98)' \n          : 'rgba(10, 10, 15, 0.95)'\n      }}\n    >\n      <NavContent>\n        <Logo\n          whileHover={hoverVariants}\n          whileTap={tapVariants}\n          onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n        >\n          AVIRAL<LogoCursor>_</LogoCursor>\n        </Logo>\n\n        <NavMenu className={isMenuOpen ? 'active' : ''}>\n          {navLinks.map((link, index) => (\n            <NavLink\n              key={link.href}\n              href={link.href}\n              whileHover={hoverVariants}\n              whileTap={tapVariants}\n              onClick={() => setIsMenuOpen(false)}\n            >\n              {link.label}\n            </NavLink>\n          ))}\n        </NavMenu>\n\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <MobileMenuButton\n            whileHover={hoverVariants}\n            whileTap={tapVariants}\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n          >\n            {isMenuOpen ? '✕' : '☰'}\n          </MobileMenuButton>\n        </div>\n      </NavContent>\n    </NavContainer>\n  );\n};\n\nexport default Navigation;\n"],"names":["NavContainer","styled","motion","nav","_templateObject","_taggedTemplateLiteral","NavContent","div","_templateObject2","Logo","_templateObject3","LogoCursor","span","_templateObject4","NavMenu","_templateObject5","NavLink","a","_templateObject6","MobileMenuButton","button","_templateObject7","Navigation","isMenuOpen","setIsMenuOpen","useState","scrolled","setScrolled","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","hoverVariants","scale","transition","duration","tapVariants","_jsx","variants","hidden","opacity","y","visible","staggerChildren","initial","animate","style","background","children","_jsxs","whileHover","whileTap","onClick","scrollTo","top","behavior","className","href","label","map","link","index","display","alignItems"],"sourceRoot":""}