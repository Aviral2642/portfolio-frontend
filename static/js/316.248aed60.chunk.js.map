{"version":3,"file":"static/js/316.248aed60.chunk.js","mappings":"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","sources":["components/FloatingActions.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst FloatingContainer = styled(motion.div)`\n  position: fixed;\n  bottom: 30px;\n  right: 30px;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: flex-end;\n`;\n\nconst ActionButton = styled(motion.button)`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  border: none;\n  background: linear-gradient(135deg, #667eea, #764ba2, #f093fb);\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  box-shadow: 0 8px 32px rgba(102, 126, 234, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.5s;\n  }\n\n  &:hover::before {\n    left: 100%;\n  }\n`;\n\nconst ActionLabel = styled(motion.div)`\n  position: absolute;\n  right: 70px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: rgba(0, 0, 0, 0.9);\n  color: white;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  white-space: nowrap;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(102, 126, 234, 0.3);\n`;\n\nconst MainButton = styled(ActionButton)`\n  width: 70px;\n  height: 70px;\n  font-size: 28px;\n  background: linear-gradient(135deg, #f093fb, #667eea);\n  box-shadow: 0 12px 40px rgba(240, 147, 251, 0.4);\n`;\n\nconst FloatingActions = () => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [hoveredAction, setHoveredAction] = useState(null);\n\n  const actions = [\n    {\n      icon: '📧',\n      label: 'Send Email',\n      action: () => window.open('mailto:aviral@example.com'),\n      color: '#667eea'\n    },\n    {\n      icon: '💼',\n      label: 'Download Resume',\n      action: () => window.open('/resume.pdf'),\n      color: '#764ba2'\n    },\n    {\n      icon: '💬',\n      label: 'LinkedIn',\n      action: () => window.open('https://linkedin.com/in/aviralsrivastava23'),\n      color: '#f093fb'\n    },\n    {\n      icon: '🐙',\n      label: 'GitHub',\n      action: () => window.open('https://github.com/Aviral2642'),\n      color: '#51cf66'\n    }\n  ];\n\n  const containerVariants = {\n    collapsed: {\n      height: 'auto',\n      transition: {\n        duration: 0.3,\n        staggerChildren: 0.1,\n        staggerDirection: -1\n      }\n    },\n    expanded: {\n      height: 'auto',\n      transition: {\n        duration: 0.3,\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const buttonVariants = {\n    collapsed: {\n      scale: 0,\n      opacity: 0,\n      y: 20,\n      transition: { duration: 0.2 }\n    },\n    expanded: {\n      scale: 1,\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.3 }\n    }\n  };\n\n  const mainButtonVariants = {\n    rotate: isExpanded ? 45 : 0,\n    scale: isExpanded ? 1.1 : 1,\n    transition: { duration: 0.3 }\n  };\n\n  return (\n    <FloatingContainer\n      variants={containerVariants}\n      animate={isExpanded ? \"expanded\" : \"collapsed\"}\n    >\n      <AnimatePresence>\n        {isExpanded && actions.map((action, index) => (\n          <motion.div\n            key={action.label}\n            variants={buttonVariants}\n            initial=\"collapsed\"\n            animate=\"expanded\"\n            exit=\"collapsed\"\n            style={{ position: 'relative' }}\n            onHoverStart={() => setHoveredAction(action.label)}\n            onHoverEnd={() => setHoveredAction(null)}\n          >\n            <ActionButton\n              onClick={action.action}\n              whileHover={{ \n                scale: 1.1,\n                rotate: 5,\n                boxShadow: `0 12px 40px ${action.color}40`\n              }}\n              whileTap={{ scale: 0.9 }}\n              style={{ background: `linear-gradient(135deg, ${action.color}, ${action.color}88)` }}\n            >\n              {action.icon}\n            </ActionButton>\n            <AnimatePresence>\n              {hoveredAction === action.label && (\n                <ActionLabel\n                  initial={{ opacity: 0, x: 20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  exit={{ opacity: 0, x: 20 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  {action.label}\n                </ActionLabel>\n              )}\n            </AnimatePresence>\n          </motion.div>\n        ))}\n      </AnimatePresence>\n      \n      <MainButton\n        onClick={() => setIsExpanded(!isExpanded)}\n        variants={mainButtonVariants}\n        animate={mainButtonVariants}\n        whileHover={{ scale: 1.15 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        {isExpanded ? '✕' : '⚡'}\n      </MainButton>\n    </FloatingContainer>\n  );\n};\n\nexport default FloatingActions;\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["FloatingContainer","styled","motion","div","_templateObject","_taggedTemplateLiteral","ActionButton","button","_templateObject2","ActionLabel","_templateObject3","MainButton","_templateObject4","FloatingActions","isExpanded","setIsExpanded","useState","hoveredAction","setHoveredAction","actions","icon","label","action","window","open","color","buttonVariants","collapsed","scale","opacity","y","transition","duration","expanded","mainButtonVariants","rotate","_jsxs","variants","height","staggerChildren","staggerDirection","animate","children","_jsx","AnimatePresence","map","index","initial","exit","style","position","onHoverStart","onHoverEnd","onClick","whileHover","boxShadow","concat","whileTap","background","x","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement"],"sourceRoot":""}